11.1)

create or replace procedure simple_inst
(principle in number, rate in number, time in number, si out number) is
begin
    si := (principle * time * rate)/100;
end simple_inst;
/


set serveroutput on
declare
v_principle number := &principle;
v_rate number := &interest_rate;
v_year number := &year;
v_si number;
begin
    simple_inst(v_principle, v_rate, v_year, v_si);
    dbms_output.put_line('Principle amount = ' || v_principle);
    dbms_output.put_line('Rate of interest = ' || v_rate);
    dbms_output.put_line('Year = ' || v_year);
    dbms_output.put_line('Simple interest = ' || v_si);
end;
/


11.2)

set serveroutput on
create or replace procedure proc_dept(dept_name in dept.dname%type) is 
cursor proj_handled(d_no dept.dno%type) is select * from emp where deptno = d_no;
d_no dept.dno%type;
p_name proj.prj_name%type;
begin
    select dno into d_no from dept where dname = dept_name;
    for i in proj_handled(d_no) loop
        select prj_name into p_name from proj where dno = d_no;
        dbms_output.put_line(i.ename||'     '||dept_name||'         '||p_name);
    end loop;
end;
/



execute proc_dept('HR');

11.3)

create or replace function cal_age(dob in date) return number is
age number(10,2);
begin
    age := round((sysdate - dob)/365, 0);
    return (age);
end;
/


create or replace function cal_exp(join_date in date) return number is
exp number(10,2);
begin
    exp := round((sysdate - join_date)/365, 0);
    return (exp);
end;
/


set serveroutput on
declare
    v_empno emp.empno%type := &empno;
    v_ename emp.ename%type;
    dob emp.date_birth%type;
    v_date_join emp.date_join%type;
    age number(10,2);
    exp number(10,2);
begin
    select ename, date_birth, date_join into v_ename, dob, v_date_join from emp where empno = v_empno;
    age := cal_age(dob);
    exp := cal_exp(v_date_join);
    dbms_output.put_line(v_ename||' '||age||' '||exp);
end;
/


11.4)

create or replace function total_fund(d_no in dept.dno%type) return number is 
fund number := 0;
begin
    select sum(prj_fund) into fund from proj where dno = d_no;
    if fund < 0 then
        return 0;
    else
        return (fund);
    end if;
end;
/


set serveroutput on
declare
    cursor dept_fund is select dno, dname from dept where dno = dno;
    total number;
begin
    for i in dept_fund loop
        total := total_fund(i.dno);
        dbms_output.put_line(i.dname||' department has received Rs. '||total||'/-');
    end loop;
end;
/


11.5)

select d.dname, sum(sal) from emp e join dept d on e.deptno = d.dno group by d.dname;

select sum(sal) from emp e join dept d on e.deptno = d.dno where d.dname = 'HR';


create or replace procedure sum_sal_emp (dept_name in varchar, sum_sal out number) is
begin
    select sum(sal) into sum_sal from emp e join dept d on e.deptno = d.dno where d.dname = dept_name;
end;
/


set serveroutput on
declare
v_dname dept.dname%type := '&dept_name';
v_sum_sal number;
begin
    sum_sal_emp(v_dname, v_sum_sal);
    dbms_output.put_line(' total salary earn by dept ' || v_dname || ' is '|| v_sum_sal);
end;
/


select count(*) from emp e join proj p on e.prj_id = p.prj_no where p.prj_name = 'Advertise';


create or replace function num_emp(project_name in proj.prj_name%type) return number is
num_of_emp number;
begin
    select count(*) into num_of_emp from emp e join proj p on e.prj_id = p.prj_no where p.prj_name = project_name;
    return (num_of_emp);
end;
/


set serveroutput on
declare
v_prj_name proj.prj_name%type := '&project_name';
v_num_emp number;
begin
    v_num_emp := num_emp(v_prj_name);
    dbms_output.put_line('total no of employee work in project ' || v_prj_name ||' is '||v_num_emp);
end;
/